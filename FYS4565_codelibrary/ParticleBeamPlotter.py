#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ParticleBeamPlotter.py
    Library for plotting particle beams as generated by ParticleBeamManager
    
    Version of 16/02/2024
    
    Created by K. Sjobak.
"""

import numpy as np
import matplotlib.pyplot as plt

arrayIndexes = {'X':0, 'XP':1, 'Y':2, 'YP':3, 'Z':4, 'EK':5}
axisScalings = {'X':1e3, 'XP':1e6, 'Y':1e3, 'YP':1e6, 'Z':1e3, 'EK':1.0}
axisTitles   = {'X':'$x$ [mm]', 'XP':"$x'$ [µrad]", 'Y':'$y$ [mm]', 'YP':"$y'$ [µrad]", 'Z':"[$z$ m]", 'EK':"$E_k$ [eV]"}


def plotDensity(partArray:np.ndarray, xPlot:str='X', yPlot:str='XP', bins:int=100, xScale:float|None=None,yScale:float|None=None, xTitle:str|None=None,yTitle:str|None=None):
    """
    Plots the beam defined by partArray,
    as a 2D density plot within a new matplotlib.pyplot figure.

    Parameters
    ----------
    partArray : np.ndarray with 6 rows and N columns.
        Beam distribution to plot from

    Returns
    -------
    Nothing is returned

    Other parameters
    ----------------
    xPlot, yPlot : string
        What to plot on the x and y axis of the plot
        Possibilities are 'X', 'XP', 'Y', 'YP', 'Z', 'EK'
        Defaults to 'X' and 'XP'

    bins : integer
        How many bins to use in the 2D histogram along each axis

    xScale,yScale : float
        Manually setting the scaling of the data from the particleArray
        being plotted on the horizontal and vertical axis.
        Defaults to None, meaning it is taken from ParticleBeamPlotter.axisScalings,
        using xPlot and yPlot as indices.

    xTitle,yTitle : string
        Manually setting the title on the horizontal and vertical axis.
        Defaults to None, meaning it is taken from ParticleBeamPlotter.axisTitles,
        using xPlot and yPlot as indices.

    Example
    -------

    >>> from FYS4565_codelibrary import ParticleBeamPlotter
    >>> ParticleBeamPlotter.plotDensity(B,xPlot='Y',yPlot='YP')
    """
    xIdx = arrayIndexes[xPlot]
    yIdx = arrayIndexes[yPlot]
    if xIdx == yIdx:
        raise ValueError("Need xIdx != yIdx")

    if xScale==None:
        xScale=axisScalings[xPlot]
    if yScale==None:
        yScale=axisScalings[yPlot]
    if xTitle==None:
        xTitle = axisTitles[xPlot]
    if yTitle==None:
        yTitle = axisTitles[yPlot]

    plt.figure()
    plt.hist2d(partArray[xIdx,:]*xScale, partArray[yIdx,:]*yScale, bins=bins)
    plt.colorbar(label="Macroparticles per bin")

    plt.xlabel(xTitle)
    plt.ylabel(yTitle)

if __name__ == "__main__":
    print("Self test mode!")
    print("TODO...")

    print(arrayIndexes)
