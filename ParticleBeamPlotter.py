#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ParticleBeamPlotter.py
    Library for plotting particle beams as generated by ParticleBeamManager
    
    Version of 23/01/2024
    
    Created by K. Sjobak.
"""

import numpy as np
import matplotlib.pyplot as plt

arrayIndexes = {'X':0, 'XP':1, 'Y':2, 'YP':3, 'Z':4, 'EK':5}
axisScalings = {'X':1e3, 'XP':1e6, 'Y':1e3, 'YP':1e6, 'Z':1e3, 'EK':1.0}
axisTitles   = {'X':'$x$ [mm]', 'XP':"$x'$ [µrad]", 'Y':'$y$ [mm]', 'YP':"$y'$ [µrad]", 'Z':"[$z$ m]", 'EK':"$E_k$ [eV]"}
                    

def plotDensity(partArray, xPlot='X', yPlot='XP', bins=100):
    """
    """
    xIdx = arrayIndexes[xPlot]
    yIdx = arrayIndexes[yPlot]
    if xIdx == yIdx:
        raise ValueError("Need xIdx != yIdx")
    
    
    plt.figure()
    
    plt.hist2d(partArray[xIdx,:]*axisScalings[xPlot], partArray[yIdx,:]*axisScalings[yPlot], bins=bins)
    plt.colorbar(label="Macroparticles per bin")
    
    plt.xlabel(axisTitles[xPlot])
    plt.ylabel(axisTitles[yPlot])

if __name__ == "__main__":
    print("Self test mode!")
    print("TODO...")
    
    print(arrayIndexes)